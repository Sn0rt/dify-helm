{{- if and .Values.externalSecret.enabled (or .Values.externalPostgres.enabled .Values.postgresql.enabled) }}
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: {{ include "dify.fullname" . }}-database
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "dify.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  refreshInterval: {{ .Values.externalSecret.refreshInterval | default "1h" }}
  secretStoreRef:
    name: {{ .Values.externalSecret.secretStore.name }}
    kind: {{ .Values.externalSecret.secretStore.kind }}
  target:
    name: {{ include "dify.fullname" . }}-database
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        # Static non-sensitive database configuration
        {{- if .Values.externalPostgres.enabled }}
        DB_HOST: {{ .Values.externalPostgres.address | quote }}
        DB_PORT: {{ .Values.externalPostgres.port | toString | quote }}
        DB_DATABASE: {{ .Values.externalPostgres.database.api | quote }}
        {{- else if .Values.postgresql.enabled }}
        {{- if eq .Values.postgresql.architecture "replication" }}
        DB_HOST: "{{ .Release.Name }}-postgresql-primary"
        {{- else }}
        DB_HOST: "{{ .Release.Name }}-postgresql"
        {{- end }}
        DB_PORT: "5432"
        DB_DATABASE: {{ .Values.postgresql.global.postgresql.auth.database | quote }}
        {{- end }}
        # Dynamic sensitive database credentials
        {{- if .Values.externalSecret.database.remoteRefs.DB_USERNAME }}
        DB_USERNAME: "{{ `{{ .DB_USERNAME }}` }}"
        {{- end }}
        {{- if .Values.externalSecret.database.remoteRefs.DB_PASSWORD }}
        DB_PASSWORD: "{{ `{{ .DB_PASSWORD }}` }}"
        {{- end }}
  data:
    {{- if .Values.externalSecret.database.remoteRefs.DB_USERNAME }}
    - secretKey: DB_USERNAME
      remoteRef:
        key: {{ .Values.externalSecret.database.remoteRefs.DB_USERNAME.key }}
        {{- if .Values.externalSecret.database.remoteRefs.DB_USERNAME.property }}
        property: {{ .Values.externalSecret.database.remoteRefs.DB_USERNAME.property }}
        {{- end }}
        {{- if .Values.externalSecret.database.remoteRefs.DB_USERNAME.decodingStrategy }}
        decodingStrategy: {{ .Values.externalSecret.database.remoteRefs.DB_USERNAME.decodingStrategy }}
        {{- else if .Values.externalSecret.decodingStrategy }}
        decodingStrategy: {{ .Values.externalSecret.decodingStrategy }}
        {{- end }}
        conversionStrategy: Default
        metadataPolicy: None
    {{- end }}
    {{- if .Values.externalSecret.database.remoteRefs.DB_PASSWORD }}
    - secretKey: DB_PASSWORD
      remoteRef:
        key: {{ .Values.externalSecret.database.remoteRefs.DB_PASSWORD.key }}
        {{- if .Values.externalSecret.database.remoteRefs.DB_PASSWORD.property }}
        property: {{ .Values.externalSecret.database.remoteRefs.DB_PASSWORD.property }}
        {{- end }}
        {{- if .Values.externalSecret.database.remoteRefs.DB_PASSWORD.decodingStrategy }}
        decodingStrategy: {{ .Values.externalSecret.database.remoteRefs.DB_PASSWORD.decodingStrategy }}
        {{- else if .Values.externalSecret.decodingStrategy }}
        decodingStrategy: {{ .Values.externalSecret.decodingStrategy }}
        {{- end }}
        conversionStrategy: Default
        metadataPolicy: None
    {{- end }}
{{- end }}