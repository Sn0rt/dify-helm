{{- if and .Values.externalSecret.enabled .Values.externalS3.enabled }}
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: {{ include "dify.fullname" . }}-s3
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "dify.labels" . | nindent 4 }}
    app.kubernetes.io/component: s3
spec:
  refreshInterval: {{ .Values.externalSecret.refreshInterval | default "1h" }}
  secretStoreRef:
    name: {{ .Values.externalSecret.secretStore.name }}
    kind: {{ .Values.externalSecret.secretStore.kind }}
  target:
    name: {{ include "dify.fullname" . }}-s3
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        # Static non-sensitive S3 configuration
        STORAGE_TYPE: "s3"
        S3_ENDPOINT: {{ .Values.externalS3.endpoint | quote }}
        S3_BUCKET_NAME: {{ .Values.externalS3.bucketName.api | quote }}
        S3_REGION: {{ .Values.externalS3.region | quote }}
        S3_USE_AWS_MANAGED_IAM: {{ .Values.externalS3.useIAM | toString | quote }}
        {{- if .Values.externalS3.pathStyle }}
        S3_USE_PATH_STYLE: {{ .Values.externalS3.pathStyle | toString | quote }}
        {{- end }}
        {{- if .Values.externalS3.useSSL }}
        S3_USE_SSL: {{ .Values.externalS3.useSSL | toString | quote }}
        {{- end }}
        # Dynamic sensitive S3 credentials
        {{- if .Values.externalSecret.s3.remoteRefs.S3_ACCESS_KEY }}
        S3_ACCESS_KEY: "{{ `{{ .S3_ACCESS_KEY }}` }}"
        {{- end }}
        {{- if .Values.externalSecret.s3.remoteRefs.S3_SECRET_KEY }}
        S3_SECRET_KEY: "{{ `{{ .S3_SECRET_KEY }}` }}"
        {{- end }}
  data:
    {{- if .Values.externalSecret.s3.remoteRefs.S3_ACCESS_KEY }}
    - secretKey: S3_ACCESS_KEY
      remoteRef:
        key: {{ .Values.externalSecret.s3.remoteRefs.S3_ACCESS_KEY.key }}
        {{- if .Values.externalSecret.s3.remoteRefs.S3_ACCESS_KEY.property }}
        property: {{ .Values.externalSecret.s3.remoteRefs.S3_ACCESS_KEY.property }}
        {{- end }}
        {{- if .Values.externalSecret.s3.remoteRefs.S3_ACCESS_KEY.decodingStrategy }}
        decodingStrategy: {{ .Values.externalSecret.s3.remoteRefs.S3_ACCESS_KEY.decodingStrategy }}
        {{- else if .Values.externalSecret.decodingStrategy }}
        decodingStrategy: {{ .Values.externalSecret.decodingStrategy }}
        {{- end }}
        conversionStrategy: Default
        metadataPolicy: None
    {{- end }}
    {{- if .Values.externalSecret.s3.remoteRefs.S3_SECRET_KEY }}
    - secretKey: S3_SECRET_KEY
      remoteRef:
        key: {{ .Values.externalSecret.s3.remoteRefs.S3_SECRET_KEY.key }}
        {{- if .Values.externalSecret.s3.remoteRefs.S3_SECRET_KEY.property }}
        property: {{ .Values.externalSecret.s3.remoteRefs.S3_SECRET_KEY.property }}
        {{- end }}
        {{- if .Values.externalSecret.s3.remoteRefs.S3_SECRET_KEY.decodingStrategy }}
        decodingStrategy: {{ .Values.externalSecret.s3.remoteRefs.S3_SECRET_KEY.decodingStrategy }}
        {{- else if .Values.externalSecret.decodingStrategy }}
        decodingStrategy: {{ .Values.externalSecret.decodingStrategy }}
        {{- end }}
        conversionStrategy: Default
        metadataPolicy: None
    {{- end }}
{{- end }}